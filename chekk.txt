from flask import Flask, flash, render_template, request, redirect, url_for
from mysql.connector import IntegrityError
import database as db

app = Flask(__name__)
# Función para obtener datos de la base de datos
def obtener_datos():
    cursor = db.database.cursor()
    cursor.execute("SELECT * FROM experiencias")
    myresult = cursor.fetchall()
    column_names = [column[0] for column in cursor.description]
    data = [dict(zip(column_names, record)) for record in myresult]
    cursor.close()
    return data

@app.route('/', methods=['GET', 'POST'])
def home():
    
    if request.method == 'POST':

        #print("prueba2")
        if 'opcion' in request.form:
            opcion_seleccionada=request.form['opcion']
            #print(opcion_seleccionada, "prueba antes de")

        # Obtener la información de la tabla "experiencias" para la opción seleccionada
            cursor=db.database.cursor()
            sql="SELECT Activo, NombreSala, NombreExperiencia  FROM experiencias WHERE NombreSala = %s"
            cursor.execute(sql, (opcion_seleccionada,))
            experiencias_data = cursor.fetchall()
            cursor.close()
            #data=obtener_datos()
            #print(data, "Eleccio")
            #print(experiencias_data, "prueba de experiencias_data")

         # Renderizar el formulario con la información obtenida
            return render_template('guardardatos.html', data=experiencias_data, sala=opcion_seleccionada)

    # Si no es una solicitud POST, simplemente renderizar el formulario vacío
    return render_template('guardardatos.html', data=None)




# Ruta para guardar usuarios en la base de datos
@app.route('/submit', methods=['POST'])
def addUser():
    Activo = request.form['Activo']
    NombreSala = request.form["NombreSala"]  
    fecha = request.form['Fecha']
    NombreExperiencia = request.form['NombreExperiencia']
    Estado = request.form['Estado']
    Comentario = request.form['Comentario']
    print(Activo)
    print(NombreSala)
    print(fecha)
    print(NombreSala)
    print(Estado)
    print(Comentario)


    if Activo and NombreSala and fecha and NombreExperiencia and Estado and Comentario:
        cursor = db.database.cursor()

        # Obtener datos de la tabla experiencias
        sql_experiencias = "SELECT * FROM experiencias WHERE Activo = %s"
        cursor.execute(sql_experiencias, (Activo,))
        experiencia_data = cursor.fetchone()

        # Insertar datos en la tabla cheklist
        sql_cheklist = "INSERT INTO cheklist (Activo, NombreSala, Fecha, NombreExperiencia, Estado, Comentario) VALUES (%s, %s, %s, %s, %s, %s)"
        data_cheklist = (Activo, NombreSala, fecha, NombreExperiencia, Estado, Comentario)
        #data_cheklist = (experiencia_data['Activo'], experiencia_data['NombreSala'], fecha, experiencia_data['NombreExperiencia'], Estado, Comentario)
        print(data_cheklist)
        try:
            cursor.execute(sql_cheklist, data_cheklist)
            db.database.commit()
        except IntegrityError as e:
            db.database.rollback()
            warning_message = f"Advertencia: El activo {Activo} ya está registrado. Ingrese un activo único."
            flash(warning_message, 'warning')
        finally:
            cursor.close()

    return redirect(url_for('home'))



# Ruta para eliminar registros
@app.route('/delete/<string:Activo>')
def delete(Activo):
    cursor = db.database.cursor()
    sql = "DELETE FROM cheklist WHERE Activo=%s"
    data = (Activo,)
    cursor.execute(sql, data)
    db.database.commit()
    return redirect(url_for('home'))

# Ruta para editar registros
@app.route('/edit/<string:Activo>', methods=['POST'])
def edit(Activo):
    Activo = request.form['Activo']
    NombreSala = request.form["NombreSala"]  
    fecha = request.form['Fecha']
    NombreExperiencia = request.form['NombreExperiencia']
    Estado = request.form['Estado']
    Comentario = request.form['Comentario']

    if Activo and NombreSala and fecha and NombreExperiencia and Estado and Comentario:
        cursor = db.database.cursor()

        # Obtener datos de la tabla experiencias
        sql_experiencias = "SELECT * FROM experiencias WHERE Activo = %s"
        cursor.execute(sql_experiencias, (Activo,))
        experiencia_data = cursor.fetchone()

        # Actualizar datos en la tabla cheklist
        sql_cheklist = "UPDATE cheklist SET Activo = %s, NombreSala = %s, Fecha = %s, NombreExperiencia = %s, Estado = %s, Comentario = %s WHERE Activo = %s"
        data_cheklist = (experiencia_data['Activo'], experiencia_data['NombreSala'], fecha, experiencia_data['NombreExperiencia'], Estado, Comentario, Activo)

        try:
            cursor.execute(sql_cheklist, data_cheklist)
            db.database.commit()
        except IntegrityError as e:
            db.database.rollback()
            warning_message = f"Advertencia: El activo {Activo} ya está registrado. Ingrese un activo único."
            flash(warning_message, 'warning')
        finally:
            cursor.close()

    return redirect(url_for('home'))

if __name__ == '__main__':
    app.run(debug=True, port=4000)


----------------------------------------------------------------------------------------------------------------------------------------------------------
formato para editar, utilizar el boton de editar
<div class="modal fade" id="modal{{row.Activo}}" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h1 class="modal-title fs-5" id="exampleModalLabel">{{row.NombreSala}}</h1>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                
                                            <div class="modal-body">
                                                <form action="/edit/{{row.Activo}}" method="post">
                                                    <label>Activo</label>
                                                    <input type="text" class="form-control mb-3" name="Activo" value="{{row.Activo}}">
                                                    <label>Nombre Sala</label>
                                                    <input type="text" class="form-control mb-3" name="NombreSala" value="{{row.NombreSala}}">
                                                    <label>Nombre Experiencia</label>
                                                    <input type="text" class="form-control mb-3" name="NombreExperiencia" value="{{row.NombreExperiencia}}">
                                            </div>
                                
                                            <div class="modal-footer">
                                                <button type="submit" class="btn btn-primary">Guardar Cambios</button>
                                            </div>
                                
                                            </form>
                                        </div>
                                    </div>
                                </div>
------------------------------------------------------------------------------------------------------------------------------------------------------------
 // Agregar un controlador de eventos para los botones de edición
            $('.btn-warning').click(function () {
                // Obtener los valores de data-activo y data-nombre-experiencia
                var activo = $(this).data('Activo');
                var nombreSala = $(this).data('NombreSala');
                var nombreExperiencia = $(this).data('NombreExperiencia');

                // Llenar los campos ocultos con los valores obtenidos
                $('#ActivoHidden').val(activo);
                $('#SalaHidden').val(nombreSala);
                $('#ExperienciaHidden').val(nombreExperiencia);

                // También puedes hacer otras cosas si es necesario, como abrir un modal, etc.
            });
------------------------------------------------------------------------------------------------------------------------------------------------------
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lista de Chequeo</title>
    
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

    <!-- jQuery UI -->
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <script>
        $(document).ready(function () {
            // Configurar el selector de fecha
            $(".fecha-manual").datepicker({
                dateFormat: 'yy-mm-dd', // Formato de la fecha
                changeMonth: true,
                changeYear: true
            });

            // Establecer la fecha actual en el campo de fecha
            var currentDate = $.datepicker.formatDate('yy-mm-dd', new Date());
            $(".fecha-manual").val(currentDate);

            // Obtener el botón por su ID
            var botonEnviar = $("#botonEnviar");

            // Agregar un evento clic al botón
            botonEnviar.on("click", function () {
                // Enviar manualmente el formulario cuando se hace clic en el botón
                $("#miFormulario").submit();
            });
        });
    </script>
</head>

<body>
    <h1 class="text-center mt-5 mb-5 text-primary">LISTA DE CHEQUEO</h1>
    <div class="container">
        <div class="card shadow">
            <div class="card-body">
                <form id="formularioPrincipal" action="{{ url_for('home') }}" method="POST">
                    <div class="row mb-3">
                        <div class="col d-flex align-items-end">
                            <select style="width: 300px;" class="form-control form-control-sm mb-3" name="opcion">
                                <option value=" ">Seleccione una opcion</option>
                                <option value="acuario">acuario</option>
                                <option value="musica">musica</option>
                                <option value="mente">mente</option>
                                <option value="vivario">vivario</option>
                                <option value="infantil">infantil</option>
                                <option value="tiempo">tiempo</option>
                                <option value="escena">escena</option>
                                <option value="taquilla">taquilla</option>
                            </select>
                            <button class="btn btn-primary mb-3 mt-4 ms-2" type="submit">Mostrar información</button>
                        </div>
                    </div>
                </form>
                <!-- Tabla -->
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th scope="col">Activo</th>
                            <th scope="col">Sala</th>
                            <th scope="col">Experiencia</th>
                            <th scope="col">Fecha</th>
                            <th scope="col">Estado</th>
                            <th scope="col">Comentario</th>
                           <!-- <th scope="col">Edit</th>-->
                           <!--  <th scope="col">Delete</th>-->
                        </tr>
                    </thead>
                    <tbody>
                        {% if data %}
                             {% for row in data %}                        
                                <tr>
                        
                                    <form id="miFormulario{{row.Activo}}" action="{{ url_for('addUser') }}" method="POST">
                            
                                        <!-- Campos ocultos para almacenar valores -->
                                        
                                        <input type="hidden" name="Activo" value="{{ row[0] }}">
                                        <input type="hidden" name="NombreSala" value="{{ row[1] }}">
                                        <input type="hidden" name="NombreExperiencia" value="{{ row[2] }}">

                                        <td>{{ row[0] if row[0] is defined else '' }}</td>
                                        <td>{{ row[1] if row[1] is defined else '' }}</td>
                                        <td>{{ row[2] if row[2] is defined else '' }}</td>

                                        <td>
                                            <input type="text" class="form-control mb-3 fecha-manual" name="Fecha">
                                        </td>
                                        <td>
                                            <!-- Ingresar manualmente la información de estado -->
                                            <select style="width: 150px;" class="form-control form-control-sm mb-3" name="Estado">
                                                <option value="BUENA">Buena</option>
                                                <option value="REPARADA">Reparada</option>
                                                <option value="DESHABILITADA">Deshabilitada</option>
                                            </select>
                                        </td>

                                        <td>
                                            <!-- Ingresar manualmente la información de comentario -->
                                            <label for="comentario_manual"></label>
                                            <textarea id="comentario_manual" name="Comentario" style="height: 50px;"></textarea>
                                        </td>
                                   
                                            <!-- Agregar botón de edición -->
                                            <!--  <button type="button" class="btn btn-warning btn-custom" id="btn-edit{{row.Activo}}" data-bs-toggle="modal" data-bs-target="#modal{{row.Activo}}">Edit</button>-->
                                            <!--<button class="btn btn-warning">Edit</button>-->                                  
                                       
                                            <!-- Agregar botón de eliminación -->
                                           <!-- <button class="btn btn-danger btn-custom">Delete</button>-->
                                                                
                                    </form>

                                </tr>

                            {% endfor %}

                        {% endif %}                                                 
                    </tbody>
                </table>
                <!-- Botón de enviar -->
                <button id="botonEnviar" class="btn btn-success" type="button">Enviar</button>
            </div>
        </div>
    </div>
</body>

</html>
-------------------------------------------------------------------------------------------------------------------------------------------------------------
from flask import Flask, flash, render_template, request, redirect, url_for
from mysql.connector import IntegrityError
import database as db

app = Flask(__name__)
app.secret_key = 'Chek!Q987'  # Agrega tu clave secreta aquí

# Función para obtener datos de la base de datos
def obtener_datos():
    cursor = db.database.cursor()
    cursor.execute("SELECT * FROM experiencias")
    myresult = cursor.fetchall()
    column_names = [column[0] for column in cursor.description]
    data = [dict(zip(column_names, record)) for record in myresult]
    cursor.close()
    return data

@app.route('/', methods=['GET', 'POST'])
def home():
    
    if request.method == 'POST':

        #print("prueba2")
        if 'opcion' in request.form:
            opcion_seleccionada=request.form['opcion']
            #print(opcion_seleccionada, "prueba antes de")

        # Obtener la información de la tabla "experiencias" para la opción seleccionada
            cursor=db.database.cursor()
            sql="SELECT Activo, NombreSala, NombreExperiencia  FROM experiencias WHERE NombreSala = %s"
            cursor.execute(sql, (opcion_seleccionada,))
            experiencias_data = cursor.fetchall()
            cursor.close()
            #data=obtener_datos()
            #print(data, "Eleccio")
            #print(experiencias_data, "prueba de experiencias_data")

         # Renderizar el formulario con la información obtenida
            return render_template('guardardatos.html', data=experiencias_data, sala=opcion_seleccionada)

    # Si no es una solicitud POST, simplemente renderizar el formulario vacío
    return render_template('guardardatos.html', data=None)




# Ruta para guardar usuarios en la base de datos
@app.route('/submit', methods=['POST'])
def addUser():
    Activo = request.form['Activo']
    NombreSala = request.form["NombreSala"]  
    fecha = request.form['Fecha']
    NombreExperiencia = request.form['NombreExperiencia']
    Estado = request.form['Estado']
    Comentario = request.form['Comentario']
    
    print(Activo)
    print(NombreSala)
    print(fecha)
    print(NombreSala)
    print(Estado)
    print(Comentario)


    if Activo and NombreSala and fecha and NombreExperiencia and Estado:
        cursor = db.database.cursor()

        # Obtener datos de la tabla experiencias
        #sql_experiencias = "SELECT * FROM experiencias WHERE Activo = %s"
        #cursor.execute(sql_experiencias, (Activo,))
        #experiencia_data = cursor.fetchone()

        # Insertar datos en la tabla cheklist
        sql_cheklist = "INSERT INTO cheklist (Activo, NombreSala, Fecha, NombreExperiencia, Estado, Comentario) VALUES (%s, %s, %s, %s, %s, %s)"
        data_cheklist = (Activo, NombreSala, fecha, NombreExperiencia, Estado, Comentario)
        #data_cheklist = (experiencia_data['Activo'], experiencia_data['NombreSala'], fecha, experiencia_data['NombreExperiencia'], Estado, Comentario)
        print(data_cheklist)
        try:
            cursor.execute(sql_cheklist, data_cheklist)
            db.database.commit()
        except IntegrityError as e:
            db.database.rollback()
            warning_message = f"Advertencia: El activo {Activo} ya está registrado. Ingrese un activo único."
            flash(warning_message, 'warning')
        finally:
            cursor.close()

    return redirect(url_for('home'))




if __name__ == '__main__':
    app.run(debug=True, port=4000)













